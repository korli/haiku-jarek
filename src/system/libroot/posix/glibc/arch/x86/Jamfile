SubDir HAIKU_TOP src system libroot posix glibc arch x86 ;

SubDirSysHdrs $(HAIKU_TOP) src system libroot posix glibc include arch x86 ;
SubDirSysHdrs $(HAIKU_TOP) src system libroot posix glibc include arch generic ;
SubDirSysHdrs $(HAIKU_TOP) src system libroot posix glibc include ;
SubDirSysHdrs $(HAIKU_TOP) src system libroot posix glibc libio ;
SubDirSysHdrs $(HAIKU_TOP) src system libroot posix glibc stdlib ;
SubDirSysHdrs $(HAIKU_TOP) src system libroot posix glibc math ;
SubDirSysHdrs $(HAIKU_TOP) src system libroot posix glibc ;

SubDirHdrs $(HAIKU_TOP) src system libroot posix glibc arch generic ;

UsePrivateHeaders libroot ;

if $(OPTIM) = -O0 {
	OPTIM = -O ;
}

# don't compile with debugging
DEBUG = 0 ;

SubDirCcFlags -D_GNU_SOURCE -D_IEEE_LIBM ;

local genericSources =
	cmp.c dbl2mpn.c divrem.c 
	memrchr.c
	mpn2dbl.c mpn2flt.c mpn2ldbl.c
	mul.c mul_n.c
	;

local architectureObject ;
for architectureObject in [ MultiArchSubDirSetup x86 x86_gcc2 ] {
	on $(architectureObject) {
		local architecture = $(TARGET_PACKAGING_ARCH) ;

		MergeObject <$(architecture)>posix_gnu_arch_$(TARGET_ARCH)_other.o :
			add_n.S
			addmul_1.S
			ldbl2mpn.c
			mpa.c mpatan.c mpatan2.c mptan.c

			mplog.c
			mul_1.S
			lshift.S rshift.S
			sub_n.S
			submul_1.S
			;

		MergeObject <$(architecture)>posix_gnu_arch_$(TARGET_ARCH)_generic.o :
			$(genericSources)
			;

		MergeObjectFromObjects <$(architecture)>posix_gnu_arch_$(TARGET_ARCH).o
			: :
			<$(architecture)>posix_gnu_arch_$(TARGET_ARCH)_generic.o
			<$(architecture)>posix_gnu_arch_$(TARGET_ARCH)_other.o
			;

		SEARCH on [ FGristFiles $(genericSources) ]
			= [ FDirName $(HAIKU_TOP) src system libroot posix glibc arch
				generic ] ;
	}
}
